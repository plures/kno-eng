name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, nixos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:windows

      - name: Build for NixOS
        if: matrix.os == 'nixos-latest'
        run: npm run build:nixos

      - name: Build for Linux Flatpak
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:flatpak

      - name: Build for MacOS
        if: matrix.os == 'macos-latest'
        run: npm run build:macos

      - name: Build for iOS
        if: matrix.os == 'macos-latest'
        run: npm run build:ios

      - name: Build for Android
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:android

      - name: Build Docker image
        run: docker build -t myproject .

      - name: Publish to GitHub
        run: npm publish

      - name: Publish to NPM
        run: npm publish --registry=https://registry.npmjs.org/

      - name: Publish to Deno.land
        run: deno publish

      - name: Publish to Docker
        run: docker push myproject

      - name: Publish to Winget
        run: winget create myproject

      - name: Publish to Nixpkg
        run: nix-build release.nix

      - name: Generate documentation
        run: npm run generate-docs

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint
